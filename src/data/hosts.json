{
  "posts": [
    {
      "id": "content1",
      "title": "タイトル１",
      "content": "これはサンプルのコンテンツ１です。Next.jsを使用してブログを作成する際に重要なのは、プロジェクトの構成を適切に設計することです。まず、pagesディレクトリに静的および動的なルーティングを設定し、必要に応じてAPI Routesも組み合わせることで、フルスタックなアプリケーションが実現できます。特に、動的ルーティングでは、[id].tsxといった形式でファイルを作成し、getStaticPathsやgetStaticProps、あるいはApp RouterにおけるgenerateStaticParamsなどのメソッドを活用してページを生成することができます。また、デザイン面ではTailwind CSSを組み合わせることで、効率よくスタイルを適用することが可能です。これにより、保守性が高く、見た目も洗練されたアプリケーションを構築することができます。画像の最適化にはnext/imageを使用し、必要な画像を軽量化しながら美しく表示することが可能です。パフォーマンスやSEOも重視される現代のWeb開発において、Next.jsは非常に強力な選択肢となるでしょう。さらに、ISR（Incremental Static Regeneration）を取り入れることで、ビルドし直さなくても動的にページを更新することができ、更新頻度の高いブログなどにとても適しています。このような機能を活用することで、現代のニーズに合った高品質なWebアプリケーションを構築することができるのです。",
      "createdAt": "2025-07-19"
    },
    {
      "id": "content2",
      "title": "タイトル２",
      "content": "これはサンプルのコンテンツ２です。Next.jsでは、データ取得の方法として多くのパターンがあります。たとえば、サーバーサイドで都度データを取得したい場合はgetServerSidePropsを使用し、ビルド時にデータを取得して静的にページを生成したい場合はgetStaticPropsを使用します。さらに、App Routerでは、ルートごとにlayout.tsxやpage.tsxを分けてファイル構成することで、柔軟にページを構築することができます。この記事では、特にApp Routerを使用した構築方法に焦点を当て、プロジェクトをどのようにモジュール化して効率的に開発を進めるかを詳しく解説していきます。また、実際のAPIとの接続方法についても紹介します。REST APIやGraphQLなど、さまざまなデータ取得手段がある中で、Next.jsではfetchを使ったデータ取得が非常に簡単に行えます。さらに、ReactのHooksを併用することで、クリーンでメンテナンスしやすいコードを書くことができます。開発においては、パフォーマンスの最適化やアクセシビリティへの配慮も重要です。たとえば、適切なalt属性の設定や、semanticなHTMLの使用などが挙げられます。こうしたベストプラクティスを取り入れることで、誰にとっても使いやすく、パフォーマンスに優れたアプリケーションを作ることができます。",
      "createdAt": "2025-07-25"
    },
    {
      "id": "content3",
      "title": "タイトル３",
      "content": "これはサンプルのコンテンツ３です。この記事では、Next.jsを使ったブログサイトの作成手順について詳しく解説します。まず、プロジェクトの初期設定として、Next.jsのテンプレートを使って新しいアプリケーションを作成します。次に、ページ構成を考えながら、トップページ、記事一覧ページ、記事詳細ページなどを実装していきます。データはJSON Serverなどを使って仮のAPIとして用意し、それを元に動的なページを生成します。ルーティングにはApp Routerを使い、layout.tsxやpage.tsxを整理していくことで、メンテナンス性の高い構造を保てます。Tailwind CSSを併用することで、レスポンシブで柔軟なデザインが可能になり、ユーザーにとって見やすいUIを提供できます。記事の本文はプレーンなテキストだけでなく、改行や装飾がある場合にも対応できるように、`white-space: pre-line` などのスタイルを使うことがポイントです。また、開発環境と本番環境でAPIのエンドポイントを切り替えるために、環境変数（`.env.local`）を設定する方法も押さえておくべき重要な点です。最終的には、Vercelなどのプラットフォームを使ってデプロイを行い、誰でもアクセスできる形で公開することができます。デプロイ後の検証では、パフォーマンスやSEOのスコアを確認し、必要に応じて最適化していくことが求められます。",
      "createdAt": "2025-07-30"
    }
  ]
}